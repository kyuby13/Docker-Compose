version: "3.9"

networks:
  waf_net:
    driver: bridge

services:
  haproxy:
    image: haproxy:latest
    container_name: haproxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./haproxy/certs:/usr/local/etc/haproxy/certs:ro
      - ./logs/haproxy:/var/log/haproxy
    depends_on:
      - modsec
    networks:
      - waf_net

  modsec:
    image: owasp/modsecurity-crs:nginx
    container_name: modsec
    restart: always
    volumes:
      - ./modsec/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./modsec/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf:ro
      - ./modsec/crs-setup.conf:/etc/modsecurity.d/owasp-crs/crs-setup.conf:ro
      - ./modsec/rules:/etc/modsecurity.d/owasp-crs/rules:ro
      - ./logs/modsec:/var/log/nginx
    networks:
      - waf_net

  crowdsec:
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    restart: always
    volumes:
      - /var/lib/crowdsec/data:/var/lib/crowdsec/data
      - ./crowdsec/config:/etc/crowdsec
      - ./logs:/var/log
    environment:
      COLLECTIONS: "crowdsecurity/haproxy crowdsecurity/nginx crowdsecurity/suricata"
    ports:
      - "8080:8080"
    networks:
      - waf_net

  cs-bouncer:
    image: crowdsecurity/cs-firewall-bouncer
    container_name: cs-bouncer
    restart: always
    environment:
      CROWDSEC_LAPI_URL: http://crowdsec:8080/
      CROWDSEC_LAPI_KEY: ${CROWDSEC_API_KEY}
      UPDATE_FREQUENCY: 10s
      BOUNCER_TYPE: nftables
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW

  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    restart: always
    volumes:
      - ./suricata/suricata.yaml:/etc/suricata/suricata.yaml:ro
      - ./suricata/rules:/var/lib/suricata/rules:ro
      - ./logs/suricata:/var/log/suricata
    network_mode: host
    command: -i eth0
